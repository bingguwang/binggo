sega 是一种分布式事务协议
其核心思想是将长事务拆分为多个本地短事务，
由Saga事务协调器协调，如果各个本地事务成功完成那就正常完成，如果某个步骤失败，则根据相反顺序一次调用补偿操作。



Saga是一种“长事务的解决方案”，更适合于“业务流程长、业务流程多”的场景

每个Saga由一系列sub-transaction Ti组成。这里可以理解为，针对每一个分布式事务的每个执行操作或者是步骤都是一个 Ti
每个Ti都有对应的补偿动作Ci，补偿动作用于撤销Ti造成的结果。

例如扣减库存是T1、创建订单是T2、支付服务是T3。那么针对每个Ti都对应一个补偿动作Ci，例如回复库存C1、订单回滚C2、支付回滚C3。


sega是有一个协调器，管理着事务, 是一个额外的服务端，需要在一个端口跑着它
简单的安装方式就是
git clone https://github.com/dtm-labs/dtm && cd dtm
go run main.go


失败时候的大致流程
T1---T2(x执行失败)   T3
先执行T2的C2，再执行T1的C1 达到回滚的目的







