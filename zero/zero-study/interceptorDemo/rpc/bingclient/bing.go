// Code generated by goctl. DO NOT EDIT.
// Source: bing.proto

package bingclient

import (
	"context"

	"binggo/zero/zero-study/interceptorDemo/rpc/bing"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = bing.Request
	Response = bing.Response

	Bing interface {
		Work(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultBing struct {
		cli zrpc.Client
	}
)

func NewBing(cli zrpc.Client) Bing {
	return &defaultBing{
		cli: cli,
	}
}

func (m *defaultBing) Work(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := bing.NewBingClient(m.cli.Conn())
	return client.Work(ctx, in, opts...)
}
