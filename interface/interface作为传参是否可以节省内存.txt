
在Go语言中，函数传参时传递指针类型确实可以节省空间和提高性能，因为指针传递的是变量的地址，而不是变量的值本身。
这意味着在函数调用过程中，不需要复制整个变量的内容，而只需传递地址即可。

而对于接口类型，情况略有不同。

由于go的函数传参都是传值，所以当传递一个接口类型时，实际上传递的是接口值（包含了动态类型和动态值），而不是指针。
因此，即使传递的是指向具体类型的指针，也无法节省传递的空间，因为接口值的大小是固定的，取决于接口中包含的数据的大小。
在这种情况下，即使传递的是指针，也需要复制接口值的内容，所以不会节省空间。
总的来说，传递接口类型并不会因为传递指针而节省空间，因为传递的是接口值本身，而不是指向接口值的指针。
因此，如果考虑节省空间，还是应该优先考虑传递指针类型。